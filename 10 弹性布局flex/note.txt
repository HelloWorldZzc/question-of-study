一.flex布局简介
    flex布局是布局中比较常用的一种布局形式,上面的三个demo展示了一些其功能
    Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性
    当然,使用相对定位和绝对定位的方式在做的话,也是能够写的.但是布局能够帮助在页面开发起着高效的作用,因此我们要学习

二.写法
    定义一个布局为弹性布局---->display:flex(常用)  or display:inline-flex(行内元素也能使用flex布局)

三.容器属性
    0.主轴和交叉轴
        根据flex布局的排序,主轴是指向其如何排序的作用
        交叉轴是与主轴垂直的轴,称为交叉轴
    一个弹性布局的容器有着以下属性:
    1. flex-direction--->决定主轴的方向（即项目的排列方向）
        row（默认值）：主轴为水平方向，起点在左端。
        row-reverse：主轴为水平方向，起点在右端。
        column：主轴为垂直方向，起点在上沿。
        column-reverse：主轴为垂直方向，起点在下沿。
    2.flex-wrap----->如果一条轴线排不下，如何换行。
        nowrap（默认）：不换行。
        wrap：换行，第一行在上方。
        wrap-reverse：换行，第一行在下方。
    3.flex-flow---->1与2的简写形式,构成了此属性
    4.justify-content--->定义了项目在主轴上的对齐方式。(flex-start | flex-end | center | space-between | space-around;)
    5.align-items--->定义项目在交叉轴上如何对齐。(flex-start | flex-end | center | baseline | stretch)
    6.align-content--->定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用(flex-start | flex-end | center | space-between | space-around | stretch;)

四.项目属性
    1.order--->定义项目的排列顺序。数值越小，排列越靠前，默认为0。
    2.flex-grow---->定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。
    3.flex-shrink--->定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
    4.flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。
    5.flex--->2,3,4的结合属性
    6.align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。


